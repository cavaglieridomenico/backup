scalar JSON

type Query {
  checkoutOrder(orderFormId: ID): OrderForm! @withOrderFormId @noCache

  specifications(productId: String, specificationNames: [String]): [Specification]
  
  specificationsMultipleItems(productIds: [String], specificationNames: [String]): [SpecificationWithProductId]
}

type Mutation {

  isServedPC(orderFormId: ID!): Installation @withOrderFormId @noCache

  cartFix(orderFormId: ID!): CartItems @withOrderFormId @noCache

  changeToAnonymousUser(orderFormId: ID): Boolean @withOrderFormId @noCache

  setProfileData(orderFormId: ID, profileData: ProfileDataInput!): Boolean
    @withOrderFormId
    @noCache

  setClientPreferencesData(orderFormId: ID, clientPreferencesData: ClientPreferencesData!): Boolean
    @withOrderFormId
    @noCache

  setCustomData(orderFormId: ID, appId: String, data: JSON): Boolean
    @withOrderFormId
    @noCache

  setInvoiceData(orderFormId: ID, data: InvoiceDataInput): Boolean
    @withOrderFormId
    @noCache
  
  insertCouponWithLogs(orderFormId: ID, coupon: String): InsertCouponOutput
    @withOrderFormId
    @noCache

  mutationCreatePaymentFromExistingCart(query : CreatePaymentFromExistingCartInput): CreatePaymentFromExistingCartOutput
    @noCache

  mutationAddPaymentData(orderFormId: String, query : [AddPaymentDataInput]): AddPaymentDataOutput
    @noCache
  saveWorldpayResponse(status: String, order: String, error: String): Boolean

  saveLogsFromFEcalls(message: String): Boolean
}
